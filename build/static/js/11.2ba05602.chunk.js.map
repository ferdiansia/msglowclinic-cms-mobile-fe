{"version":3,"sources":["components/PageTitleWrapper/index.tsx","content/about-us/PageHeader.tsx","components/Text/index.tsx","components/Input/WYSIWYGEditor/WYSIWYGEditor.tsx","content/about-us/about-us-form/about-us-form.tsx","content/about-us/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","PageHeader","props","Grid","container","justifyContent","alignItems","item","Typography","variant","component","gutterBottom","React","memo","TextWrapper","palette","common","black","primary","main","secondary","success","warning","error","info","Text","className","color","rest","WYSIWYGEditor","useState","EditorState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","defaultValue","editorState","setEditorState","label","name","control","render","field","wrapperClassName","editorClassName","onEditorStateChange","onChange","draftToHtml","convertToRaw","getCurrentContent","aboutUsValidationSchema","object","title","string","required","content","AboutUsForm","loading","useAppSelector","state","aboutUs","id","data","useForm","resolver","yupResolver","defaultValues","handleSubmit","errors","formState","onSubmit","value","autoComplete","mt","TextField","type","placeholder","fullWidth","helperText","message","sx","pt","textAlign","LoadingButton","disabled","width","AboutUs","dispatch","useAppDispatch","alert","useAlert","getDataAboutUs","getAboutUs","useEffect","useCallback","formData","render_type","updateAboutUs","actionResult","unwrapResult","show","Container","Card","py","px"],"mappings":"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","file":"static/js/11.2ba05602.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import { Typography, Grid } from '@mui/material';\nimport React from 'react';\n\nfunction PageHeader(props) {\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          About Us Form\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default React.memo(PageHeader);\n","import { FC, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\n\ninterface TextProps {\n  className?: string;\n  color?:\n  | 'primary'\n  | 'secondary'\n  | 'error'\n  | 'warning'\n  | 'success'\n  | 'info'\n  | 'black';\n  children?: ReactNode;\n}\n\nconst TextWrapper = styled('span')(\n  ({ theme }) => `\n      \n      &.MuiText {\n\n        &-black {\n          color: ${theme.palette.common.black}\n        }\n\n        &-primary {\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          color: ${theme.palette.info.main}\n        }\n      }\n`\n);\n\nconst Text: FC<TextProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  ...rest\n}) => {\n  return (\n    <TextWrapper className={'MuiText-' + color} {...rest}>\n      {children}\n    </TextWrapper>\n  );\n};\n\nText.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success',\n    'info',\n    'black'\n  ])\n};\n\nexport default Text;\n","import React, { useState } from 'react';\nimport {\n  EditorState,\n  convertToRaw,\n  ContentState,\n  convertFromHTML\n} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './WYSIWYGEditor.scss';\nimport { Controller } from 'react-hook-form';\nimport Text from 'src/components/Text';\n\nconst WYSIWYGEditor = (props) => {\n  const [editorState, setEditorState] = useState(\n    EditorState.createWithContent(\n      ContentState.createFromBlockArray(convertFromHTML(props.defaultValue))\n    )\n  );\n  const onEditorStateChange = (editorState, onChange) => {\n    setEditorState(editorState);\n    return onChange(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  };\n\n  return (\n    <>\n      <Text>{props.label}</Text>\n      <Controller\n        name={props.name}\n        control={props.control}\n        defaultValue={props.defaultValue || ''}\n        render={({ field }) => (\n          <div className=\"editor\">\n            <Editor\n              editorState={editorState}\n              wrapperClassName=\"wrapper-class\"\n              editorClassName=\"editor-class\"\n              onEditorStateChange={(editorState) =>\n                onEditorStateChange(editorState, field.onChange)\n              }\n            />\n          </div>\n        )}\n      />\n    </>\n  );\n};\n\nexport default React.memo(WYSIWYGEditor);\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { LoadingButton } from '@mui/lab';\nimport { TextField } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { memo } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport WYSIWYGEditor from 'src/components/Input/WYSIWYGEditor/WYSIWYGEditor';\nimport { useAppSelector } from 'src/redux/store';\nimport { object, string } from 'yup';\nimport { IAboutUsForm } from '..';\n\nconst aboutUsValidationSchema = object({\n  title: string().required('Title wajib diisi'),\n  content: string().required('About Us wajib diisi')\n}).required();\n\ninterface AboutUsFormProps {\n  onSubmit: (value: IAboutUsForm) => void;\n  data: IAboutUsForm;\n}\n\nconst AboutUsForm = (props: AboutUsFormProps) => {\n  const { loading } = useAppSelector((state) => state.aboutUs);\n\n  const defaultValue: IAboutUsForm = {\n    id: null,\n    title: '',\n    content: '',\n    ...props.data\n  };\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<IAboutUsForm>({\n    resolver: yupResolver(aboutUsValidationSchema),\n    defaultValues: defaultValue\n  });\n\n  return (\n    <form\n      id=\"about-us-form\"\n      onSubmit={handleSubmit((value) => props.onSubmit(value))}\n      autoComplete=\"off\"\n    >\n      <Box mt={3}>\n        <Controller\n          name=\"title\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field }) => (\n            <TextField\n              {...field}\n              type=\"text\"\n              placeholder=\"Title\"\n              label=\"Title\"\n              fullWidth\n              error={!!errors?.title}\n              helperText={errors.title?.message}\n            />\n          )}\n        />\n      </Box>\n      <Box mt={3}>\n        <WYSIWYGEditor\n          label={'Content'}\n          defaultValue={props.data.content}\n          name=\"content\"\n          control={control}\n        />\n      </Box>\n\n      <Box sx={{ pt: 3, textAlign: 'right' }}>\n        <LoadingButton\n          disabled={!!loading}\n          loading={!!loading}\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{ width: 100 }}\n        >\n          Simpan\n        </LoadingButton>\n      </Box>\n    </form>\n  );\n};\n\nexport default memo(AboutUsForm);\n","import { Card, Container } from '@mui/material';\nimport { Helmet } from 'react-helmet-async';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { useAppDispatch, useAppSelector } from 'src/redux/store';\nimport PageHeader from './PageHeader';\nimport { useAlert } from 'react-alert';\nimport { useCallback, useEffect } from 'react';\nimport { getAboutUs, updateAboutUs } from 'src/redux/about-us/aboutUsSlice';\nimport AboutUsForm from './about-us-form/about-us-form';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nexport interface IAboutUsForm {\n  id?: string;\n  title: string;\n  slug?: 'about-us';\n  render_type?: 'html' | 'text' | 'url' | 'markdown';\n  content: string;\n}\n\nfunction AboutUs(props) {\n  const dispatch = useAppDispatch();\n  const { data } = useAppSelector((state) => state.aboutUs);\n  const alert = useAlert();\n\n  const getDataAboutUs = async () => {\n    await dispatch(\n      getAboutUs({\n        type: 'collection'\n      })\n    );\n  };\n\n  useEffect(() => {\n    getDataAboutUs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = useCallback(async (formData: IAboutUsForm) => {\n    formData.render_type = 'html';\n\n    try {\n      const actionResult = await dispatch(updateAboutUs(formData));\n      const result = unwrapResult(actionResult);\n      if (result) {\n        alert.show('Data berhasil tersimpan');\n      }\n    } catch (err) {\n      alert.show(err);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <Helmet>\n        <title>About Us</title>\n      </Helmet>\n      <PageTitleWrapper>\n        <PageHeader />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\">\n        <Card sx={{ py: 3, px: 2 }}>\n          {data && <AboutUsForm onSubmit={onSubmit} data={data} />}\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default AboutUs;\n"],"sourceRoot":""}