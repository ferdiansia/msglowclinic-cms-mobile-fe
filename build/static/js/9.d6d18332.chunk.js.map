{"version":3,"sources":["components/PageTitleWrapper/index.tsx","utils/string-function.ts","components/Modal/modal-delete.component.tsx","content/ecommerce/items-group/PageHeader.tsx","content/ecommerce/items-category/form/itemsCategoryForm.tsx","content/ecommerce/items-category/form/itemsCategoryModalForm.tsx","content/ecommerce/items-category/itemsCategoryListTable.tsx","content/ecommerce/items-category/itemsCategoryList.tsx","content/ecommerce/items-category/index.tsx"],"names":["PageTitle","styled","Box","theme","spacing","PageTitleWrapper","children","maxWidth","toCapitalize","data","separator","result","dataArr","split","forEach","v","i","trim","replace","c","toUpperCase","replaceAll","length","ModalDelete","props","open","onClose","handleClose","id","title","content","variant","sx","width","disabled","loading","onClick","color","startIcon","fontSize","autoFocus","React","memo","PageHeader","container","justifyContent","alignItems","item","component","gutterBottom","hasCreate","arrow","mt","xs","md","handleOpenModalForm","ErrorWrapper","ItemCategoryValidationSchema","object","string","required","ItemsCategoryForm","itemCategory","useSelector","selectAllItemCategory","defaultValue","description","is_enabled","parent_id","file","item_ids","useForm","resolver","yupResolver","defaultValues","control","handleSubmit","errors","formState","onSubmit","value","autoComplete","name","render","field","TextField","type","placeholder","label","fullWidth","error","helperText","message","Switch","defaultChecked","inputProps","size","Autocomplete","disablePortal","options","map","getOptionLabel","option","isOptionEqualToValue","onChange","e","position","zIndex","renderInput","params","target","files","ItemsCategoryModalForm","Dialog","disableEscapeKeyDown","DialogTitle","Typography","DialogContent","style","height","DialogActions","Button","LoadingButton","form","ItemsCategoryListTable","edit","handleDelete","useTheme","Card","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","category","index","hover","alt","src","cover","url","fontWeight","noWrap","Tooltip","IconButton","background","colors","primary","lighter","palette","main","ItemsCategoryList","dispatch","useAppDispatch","getAllData","getItemCategory","relations","useEffect","handleOpenModalEdit","handleOpenModalDelete","ItemsCategory","alert","useAlert","useState","openModal","setOpenModal","openModalDelete","setOpenModelDelete","setData","useAppSelector","state","item_category","itemCategoryData","entities","console","log","selectedId","setSelectedId","handleOpenModal","useCallback","handleCloseModal","handleCloseModalDelete","setTimeout","handleDeleteClick","removeItemCategory","actionResult","unwrapResult","show","formData","FormData","append","updateItemCategory","payload","body","addItemCategory","Container","mb","Grid","direction"],"mappings":"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","file":"static/js/9.d6d18332.chunk.js","sourcesContent":["import { FC, ReactNode } from 'react';\nimport { Container } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4, 0)};\n`\n);\n\ninterface PageTitleWrapperProps {\n  children?: ReactNode;\n}\n\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\n  return (\n    <>\n      <PageTitle>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </PageTitle>\n    </>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","export const toCapitalize = (data: string, separator: string = \"-\"): string => {\n  let result: string = \"\"\n  const dataArr = data.split(separator)\n  dataArr.forEach((v, i) => {\n    result += v.trim().replace(/^\\w/, (c) => c.toUpperCase()).replaceAll(\"-\", \" \");\n\n    if (i !== dataArr.length - 1) {\n      result += \" \"\n    }\n  })\n  return result\n};\n","import { LoadingButton } from '@mui/lab';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@mui/material';\nimport React from 'react';\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\n\nexport interface IModalDeleteProps {\n  open: boolean;\n  handleClose: () => void;\n  title: string;\n  content: string;\n  onClick: () => void;\n  loading: boolean;\n}\n\nfunction ModalDelete(props: IModalDeleteProps) {\n  return (\n    <Dialog\n      open={props.open}\n      onClose={() => props.handleClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {props.content}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          sx={{ width: 100 }}\n          disabled={props.loading}\n          onClick={() => props.handleClose()}\n        >\n          Tidak\n        </Button>\n        <LoadingButton\n          variant=\"contained\"\n          sx={{ width: 100 }}\n          loading={props.loading}\n          disabled={props.loading}\n          onClick={props.onClick}\n          color=\"error\"\n          startIcon={<DeleteForeverTwoToneIcon fontSize=\"small\" />}\n          autoFocus\n        >\n          Hapus\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default React.memo(ModalDelete);\n","import { Typography, Button, Grid, Tooltip } from '@mui/material';\n\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\nimport { toCapitalize } from 'src/utils/string-function';\nimport React from 'react';\n\nexport interface IItemsPageHeaderProps {\n  title: string;\n  hasCreate?: boolean;\n  handleOpenModalForm?: () => void;\n}\n\nfunction PageHeader(props: IItemsPageHeaderProps) {\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\n          {toCapitalize(props.title)}\n        </Typography>\n      </Grid>\n      {!!props.hasCreate && (\n        <Grid item>\n          <Tooltip title=\"Create\" arrow>\n            <Button\n              sx={{ mt: { xs: 2, md: 0 } }}\n              variant=\"contained\"\n              onClick={() => props.handleOpenModalForm()}\n              startIcon={<AddTwoToneIcon fontSize=\"small\" />}\n            >\n              Create {toCapitalize(props.title)}\n            </Button>\n          </Tooltip>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default React.memo(PageHeader);\n","import { Autocomplete, Box, styled, Switch, TextField } from '@mui/material';\nimport { memo } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { object, string } from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useSelector } from 'react-redux';\nimport { selectAllItemCategory } from 'src/redux/item-category/itemCategorySlice';\n\nconst ErrorWrapper = styled(Box)(\n  () => `\n    color: red\n  `\n);\n\nconst ItemCategoryValidationSchema = object({\n  title: string().required('Title wajib diisi')\n}).required();\n\nexport interface ItemsCategoryFormProps {\n  onSubmit: (data: any) => void;\n  defaultValue: any;\n}\n\nconst ItemsCategoryForm = (props: ItemsCategoryFormProps) => {\n  const itemCategory = useSelector(selectAllItemCategory);\n  const defaultValue = {\n    id: null,\n    title: '',\n    description: '',\n    is_enabled: 0,\n    parent_id: '',\n    file: '',\n    item_ids: [],\n    ...props?.defaultValue\n  };\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<any>({\n    resolver: yupResolver(ItemCategoryValidationSchema),\n    defaultValues: defaultValue\n  });\n\n  return (\n    <>\n      <form\n        id=\"item-category-form\"\n        onSubmit={handleSubmit((value) => props.onSubmit(value))}\n        autoComplete=\"off\"\n      >\n        <Box mt={3}>\n          <Controller\n            name=\"title\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                type=\"text\"\n                placeholder=\"Title\"\n                label=\"Title\"\n                fullWidth\n                error={!!errors?.title}\n                helperText={errors.title?.message}\n              />\n            )}\n          />\n        </Box>\n        <Box mt={3}>\n          <Controller\n            name=\"description\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                type=\"text\"\n                placeholder=\"Description\"\n                label=\"Description\"\n                fullWidth\n              />\n            )}\n          />\n        </Box>\n        <Box mt={3}>\n          <Controller\n            name=\"is_enabled\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <Switch\n                {...field}\n                defaultChecked={!!field.value}\n                inputProps={{ 'aria-label': 'Enabled' }}\n                size=\"medium\"\n              />\n            )}\n          />\n        </Box>\n        {!props?.defaultValue?.length && (\n          <Box mt={3}>\n            <Controller\n              name=\"parent_id\"\n              control={control}\n              defaultValue=\"\"\n              render={({ field }) => (\n                <Autocomplete\n                  disablePortal\n                  options={itemCategory.map((v) => {\n                    return {\n                      label: v.title,\n                      id: v.id\n                    };\n                  })}\n                  getOptionLabel={(option) => option.label}\n                  isOptionEqualToValue={(option, value) =>\n                    option.id === value.id\n                  }\n                  onChange={(e, data) => field.onChange(data)}\n                  sx={{ width: 300, position: 'relative', zIndex: 50 }}\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Parent\" />\n                  )}\n                />\n              )}\n            />\n          </Box>\n        )}\n        <Box mt={3}>\n          <Controller\n            name=\"file\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <>\n                <input\n                  type=\"file\"\n                  onChange={(e) => {\n                    field.onChange(e.target.files[0]);\n                  }}\n                />\n                {errors?.file && (\n                  <ErrorWrapper>{errors?.file?.message}</ErrorWrapper>\n                )}\n              </>\n            )}\n          />\n        </Box>\n      </form>\n    </>\n  );\n};\n\nexport default memo(ItemsCategoryForm);\n","import { LoadingButton } from '@mui/lab';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography\n} from '@mui/material';\nimport React from 'react';\nimport ItemsGroupForm from './itemsCategoryForm';\n\nexport interface IItemsCategoryModalFormProps {\n  open: boolean;\n  handleClose: () => void;\n  onSubmit: (formData: any) => void;\n  defaultValue: any;\n  loading: boolean;\n}\nfunction ItemsCategoryModalForm(props: IItemsCategoryModalFormProps) {\n  return (\n    <Dialog\n      disableEscapeKeyDown={true}\n      open={props.open}\n      fullWidth\n      maxWidth=\"sm\"\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle>\n        <Typography variant=\"h3\" gutterBottom>\n          Items Category Cover\n        </Typography>\n      </DialogTitle>\n      <DialogContent style={{ height: '80vh' }}>\n        <ItemsGroupForm\n          onSubmit={props.onSubmit}\n          defaultValue={props.defaultValue}\n        ></ItemsGroupForm>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={props.handleClose}\n          variant=\"contained\"\n          color=\"error\"\n          disabled={!!props.loading}\n          sx={{ width: 100 }}\n        >\n          Batal\n        </Button>\n        <LoadingButton\n          type=\"submit\"\n          loading={!!props.loading}\n          disabled={!!props.loading}\n          form=\"item-category-form\"\n          variant=\"contained\"\n          sx={{ width: 100 }}\n        >\n          Simpan\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default React.memo(ItemsCategoryModalForm);\n","import React, { FC } from 'react';\nimport {\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableContainer,\n  Typography,\n  Tooltip,\n  IconButton,\n  useTheme\n} from '@mui/material';\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\n\nimport { useSelector } from 'react-redux';\nimport { selectAllItemCategory } from 'src/redux/item-category/itemCategorySlice';\nimport { IItemCategory } from 'src/models/item-category.model';\n\ninterface ItemsCategoryListTableProps {\n  edit: (data) => {};\n  handleDelete?: (data) => {};\n}\n\nconst ItemsCategoryListTable: FC<any> = ({\n  edit,\n  handleDelete\n}: ItemsCategoryListTableProps) => {\n  const itemCategory = useSelector(selectAllItemCategory);\n  const theme = useTheme();\n\n  return (\n    <>\n      <Card>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Cover</TableCell>\n                <TableCell>Category Name</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {itemCategory.map((category: IItemCategory, index) => {\n                return (\n                  <TableRow hover key={category.id}>\n                    <TableCell width={110}>\n                      <img\n                        loading=\"lazy\"\n                        width={100}\n                        alt=\"category img\"\n                        src={category?.cover?.url}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Typography\n                        variant=\"body1\"\n                        fontWeight=\"bold\"\n                        color=\"text.primary\"\n                        gutterBottom\n                        noWrap\n                      >\n                        {category.title}\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Tooltip title=\"Edit\" arrow>\n                        <IconButton\n                          onClick={() => edit(category)}\n                          sx={{\n                            '&:hover': {\n                              background: theme.colors.primary.lighter\n                            },\n                            color: theme.palette.primary.main\n                          }}\n                          color=\"inherit\"\n                          size=\"small\"\n                        >\n                          <EditTwoToneIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      {handleDelete && (\n                        <Tooltip title=\"Delete\" arrow>\n                          <IconButton\n                            onClick={() => handleDelete(category.id)}\n                            sx={{\n                              '&:hover': {\n                                background: theme.colors.error.lighter\n                              },\n                              color: theme.palette.error.main\n                            }}\n                            color=\"inherit\"\n                            size=\"small\"\n                          >\n                            <DeleteTwoToneIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Card>\n    </>\n  );\n};\n\nexport default React.memo(ItemsCategoryListTable);\n","import { Card } from '@mui/material';\nimport { memo, useEffect } from 'react';\nimport { getItemCategory } from 'src/redux/item-category/itemCategorySlice';\nimport { useAppDispatch } from 'src/redux/store';\nimport ItemsCategoryListTable from './itemsCategoryListTable';\n\ninterface ItemsCategoryLisPropst {\n  handleOpenModalEdit: (data) => void;\n  handleOpenModalDelete: (data) => void;\n}\n\nfunction ItemsCategoryList(props: ItemsCategoryLisPropst) {\n  const dispatch = useAppDispatch();\n\n  const getAllData = async () => {\n    await dispatch(\n      getItemCategory({\n        type: 'collection',\n        relations: 'cover'\n      })\n    );\n  };\n  useEffect(() => {\n    getAllData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Card>\n      <ItemsCategoryListTable\n        edit={props.handleOpenModalEdit}\n        handleDelete={props.handleOpenModalDelete}\n      />\n    </Card>\n  );\n}\n\nexport default memo(ItemsCategoryList);\n","import { Container, Grid } from '@mui/material';\nimport { memo, useCallback, useState } from 'react';\nimport ModalDeleteComponent from 'src/components/Modal/modal-delete.component';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport {\n  addItemCategory,\n  removeItemCategory,\n  updateItemCategory\n} from 'src/redux/item-category/itemCategorySlice';\nimport { useAppSelector } from 'src/redux/store';\n\nimport { useAlert } from 'react-alert';\n\nimport PageHeader from '../items-group/PageHeader';\nimport ItemsCategoryModalForm from './form/itemsCategoryModalForm';\nimport { useAppDispatch } from 'src/redux/store';\nimport ItemsCategoryList from './itemsCategoryList';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nfunction ItemsCategory() {\n  const dispatch = useAppDispatch();\n  const alert = useAlert();\n\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [openModalDelete, setOpenModelDelete] = useState<boolean>(false);\n  const [data, setData] = useState({});\n\n  const { entities: itemCategoryData, loading } = useAppSelector(\n    (state) => state.item_category\n  );\n\n  console.log(itemCategoryData);\n\n  const [selectedId, setSelectedId] = useState<string>(null);\n\n  const handleOpenModal = useCallback((data?: any) => {\n    setData(data);\n    setOpenModal(true);\n  }, []);\n\n  const handleCloseModal = useCallback(() => {\n    setData({});\n    setOpenModal(false);\n  }, []);\n\n  const handleOpenModalDelete = useCallback((index: string) => {\n    setSelectedId(index);\n    setOpenModelDelete(true);\n  }, []);\n\n  const handleCloseModalDelete = useCallback(() => {\n    setOpenModelDelete(false);\n    setTimeout(() => {\n      setSelectedId(null);\n    }, 100);\n  }, []);\n\n  const handleDeleteClick = async () => {\n    try {\n      const actionResult = await dispatch(\n        removeItemCategory({ id: selectedId })\n      );\n      const result = unwrapResult(actionResult);\n      if (result) {\n        alert.show('Data berhasil dihapus');\n        handleCloseModalDelete();\n      }\n    } catch (err) {\n      alert.show(err);\n    }\n  };\n\n  const onSubmit = useCallback(\n    async (formData) => {\n      formData.relations = 'cover';\n      const file = new FormData();\n      if (!formData?.file?.id) {\n        file.append('cover', formData.file);\n      }\n      delete formData.file;\n      formData.is_enabled = !!formData.is_enabled ? 1 : 0;\n      if (formData.parent_id) formData.parent_id = formData.parent_id.id;\n      try {\n        const actionResult = await dispatch(\n          !formData?.id\n            ? addItemCategory({ payload: formData, body: file })\n            : updateItemCategory({ payload: formData, body: file })\n        );\n        const result = unwrapResult(actionResult);\n        if (result) {\n          handleCloseModal();\n        }\n      } catch (err) {\n        alert.show(err);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <>\n      <PageTitleWrapper>\n        <PageHeader\n          title={`Items Category`}\n          handleOpenModalForm={handleOpenModal}\n          hasCreate={true}\n        />\n      </PageTitleWrapper>\n      <Container maxWidth=\"lg\" sx={{ mb: 10 }}>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12}>\n            <ItemsCategoryList\n              handleOpenModalDelete={handleOpenModalDelete}\n              handleOpenModalEdit={handleOpenModal}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n\n      <ItemsCategoryModalForm\n        open={openModal}\n        handleClose={() => handleCloseModal()}\n        onSubmit={onSubmit}\n        defaultValue={data}\n        loading={loading}\n      />\n\n      <ModalDeleteComponent\n        open={openModalDelete}\n        handleClose={handleCloseModalDelete}\n        title={`Anda yakin ingin menghapus kategori ini ${itemCategoryData?.[selectedId]?.title}`}\n        content={`Dengan menghapus kategori \"${itemCategoryData?.[selectedId]?.title}\" maka\n      data kategori akan hilang secara permanen.`}\n        onClick={() => {\n          handleDeleteClick();\n        }}\n        loading={loading}\n      />\n    </>\n  );\n}\n\nexport default memo(ItemsCategory);\n"],"sourceRoot":""}